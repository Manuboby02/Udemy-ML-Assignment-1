import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# 1) Load & inspect
df = pd.read_csv('healthcare.csv')
print(df.dtypes)               # see which columns are object/string
print(df.isnull().sum())       # ensure no missing values

# 2) Visual EDA (optional)
df.hist(figsize=(10,8))
plt.tight_layout()
plt.show()

sns.pairplot(df, hue='work_type')
plt.show()

# 3) Encode ALL categoricals
le = LabelEncoder()
for col in df.columns:
    if df[col].dtype == object:
        df[col] = le.fit_transform(df[col])

# Confirm no more object columns
print(df.dtypes)

# 4) Split features & target
X = df.drop('work_type', axis=1)
y = df['work_type']

# 5) Scale features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 6) Train/test split
X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y, test_size=0.2, random_state=42
)

# 7) Train Random Forest
rf = RandomForestClassifier(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

# 8) Evaluate
y_pred = rf.predict(X_test)
acc = accuracy_score(y_test, y_pred)
print(f'Accuracy: {acc:.2f}\n')
print('Classification Report:')
print(classification_report(y_test, y_pred))

# 9) Confusion matrix
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.show()
